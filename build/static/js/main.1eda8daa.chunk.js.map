{"version":3,"sources":["components/Flight.jsx","components/FlightList.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["Flight","data","this","props","date","timeArrShedule","timeDepShedule","newDate","Date","react_default","a","createElement","className","term","gateNo","concat","getHours","padStart","getMinutes","airline","en","name","Component","FlightList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","departure","react","map","item","Flight_Flight","key","ID","App","state","statusDate","statusFlight","yesterdayDepartures","yesterdayArrival","todayDepartures","todayArrival","tomorrowDepartures","tomorrowArrival","clickHandler","bind","assertThisInitialized","dataArrs","setState","body","arrival","url","urlFlight","dataYesterday","getDate","getMonth","getFullYear","dataToday","dataTomorrow","push","createData","init","fetch","then","resp","json","urls","_this2","Promise","all","createPromise","_this3","getAllData","responses","parseData","event","target","id","onClick","FlightList_FlightList","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eda8daa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Flight extends Component {\r\n  render() {\r\n    const data = this.props.data;\r\n    const date = (data.timeArrShedule || data.timeDepShedule);\r\n    const newDate = new Date(date);\r\n    return (\r\n      <div className=\"flights-row\">\r\n        <div>{data.term}</div>\r\n        <div>{data.gateNo ? data.gateNo : '-'}</div>\r\n        <div>{`${newDate.getHours()}`.padStart(2, '0')}:{`${newDate.getMinutes()}`.padStart(2, '0')}</div>\r\n        <div>{data['airportToID.name_en'] || data['airportFromID.name_en']}</div>\r\n        <div>{data.airline.en.name}</div>\r\n        <div>{data['carrierID.IATA'] || '-'}</div>\r\n        <div>{data['status']}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport Flight from './Flight';\r\n\r\nexport default class FlightList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.departure = this.props.data\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.departure.map(item => <Flight key={item.ID} data={item} />)}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport FlightList from './FlightList';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n\n    this.state = {\n      statusDate: 'today',\n      statusFlight: 'departures',\n\n      yesterdayDepartures: '',\n      yesterdayArrival: '',\n      todayDepartures: '',\n      todayArrival: '',\n      tomorrowDepartures: '',\n      tomorrowArrival: ''\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  parseData(dataArrs) {\n    this.setState(() => ({\n      yesterdayDepartures: dataArrs[0].body.departure,\n      yesterdayArrival: dataArrs[0].body.arrival,\n      todayDepartures: dataArrs[1].body.departure,\n      todayArrival: dataArrs[1].body.arrival,\n      tomorrowDepartures: dataArrs[2].body.departure,\n      tomorrowArrival: dataArrs[2].body.arrival\n    }));\n  }\n\n  createData() {\n    const date = new Date();\n    const url = this.props.urlFlight;\n\n    const dateYesterday = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\n    const dateToday = `${date.getDate() + 1}-${date.getMonth() + 1}-${date.getFullYear()}`;\n    const dateTomorrow = `${date.getDate() + 2}-${date.getMonth() + 1}-${date.getFullYear()}`;\n\n    const dataYesterday = url + dateYesterday;\n    const dataToday = url + dateToday;\n    const dataTomorrow = url + dateTomorrow;\n\n    this.data.push(dataYesterday, dataToday, dataTomorrow);\n  }\n\n  componentDidMount() {\n    this.createData();\n    this.init();\n  }\n\n  createPromise(url) {\n    return fetch(url).then(resp => resp.json());\n  }\n\n  getAllData(urls) {\n    return Promise.all(urls.map(url => this.createPromise(url)));\n  }\n\n  init() {\n    this.getAllData(this.data).then(responses => this.parseData(responses));\n  }\n\n  clickHandler(event) {\n    if (event.target.id === 'departures') {\n      this.setState(() => ({statusFlight: 'departures'}));\n    }\n    if (event.target.id === 'arrivals') {\n      this.setState(() => ({statusFlight: 'arrivals'}));\n    }\n    if (event.target.id === 'yesterday') {\n      this.setState(() => ({statusDate: 'yesterday'}));\n    }\n    if (event.target.id === 'today') {\n      this.setState(() => ({statusDate: 'today'}));\n    }\n    if (event.target.id === 'tomorrow') {\n      this.setState(() => ({statusDate: 'tomorrow'}));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"table-flihhts\">\n        <div className=\"departures\">\n          <button id=\"yesterday\" onClick={this.clickHandler}>Yesterday</button>\n          <button id=\"today\" onClick={this.clickHandler}>Today</button>\n          <button id=\"tomorrow\" onClick={this.clickHandler}>Tomorrow</button>\n          <button id=\"departures\" onClick={this.clickHandler}>Departures</button>\n          <button id=\"arrivals\" onClick={this.clickHandler}>Arrivals</button>\n        </div>\n        <div className=\"flights\">\n          <div className=\"flights-row\">\n            <div className=\"\">Terminal</div>\n            <div className=\"\">Gate</div>\n            <div className=\"\">Local time</div>\n            <div className=\"\">Destination</div>\n            <div className=\"\">Airline</div>\n            <div className=\"\">Flight</div>\n            <div className=\"\">Status</div>\n          </div>\n\n          {this.state.statusDate === 'yesterday'\n            && this.state.statusFlight === 'departures'\n            && this.state.todayArrival\n            && <FlightList data={this.state.yesterdayDepartures} />}\n          {this.state.statusDate === 'yesterday'\n            && this.state.statusFlight === 'arrivals'\n            && this.state.todayArrival\n            && <FlightList data={this.state.yesterdayArrival} />}\n\n          {this.state.statusDate === 'today'\n            && this.state.statusFlight === 'departures'\n            && this.state.todayDepartures\n            && <FlightList data={this.state.todayDepartures} />}\n          {this.state.statusDate === 'today'\n            && this.state.statusFlight === 'arrivals'\n            && this.state.todayArrival\n            && <FlightList data={this.state.todayArrival} />}\n\n          {this.state.statusDate === 'tomorrow'\n            && this.state.statusFlight === 'departures'\n            && this.state.todayArrival\n            && <FlightList data={this.state.tomorrowDepartures} />}\n          {this.state.statusDate === 'tomorrow'\n            && this.state.statusFlight === 'arrivals'\n            && this.state.todayArrival\n            && <FlightList data={this.state.tomorrowArrival} />}\n        </div>\n        {(!this.state.yesterdayDepartures\n          || !this.state.yesterdayArrival\n          || !this.state.todayDepartures\n          || !this.state.todayArrival\n          || !this.state.tomorrowDepartures\n          || !this.state.tomorrowArrival)\n          && <div className=\"loading\">Loading...</div>}\n      </div>\n    );\n  }\n}\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    || window.location.hostname === '[::1]'\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst urlFlight = 'https://api.iev.aero/api/flights/'\n\nReactDOM.render(<App urlFlight={urlFlight} />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}